{"mappings":"YAOAA,QAAQC,IAAI,yCAcV,IATMC,EASFC,GATED,EAAQ,EACL,WAGL,OAFAA,IACAF,QAAQC,IAAIC,GACLA,IAOmBC,IAChCA,IACAA,IAGAH,QAAQC,IAAI,yCAGkF,IAA1FG,EAAI,EAIR,SAASC,IAGL,OAFAD,IACAJ,QAAQC,IAAIG,GACLA,EAIXC,IACAA,IACAA,I","sources":["src/js/task1.js"],"sourcesContent":["\n// 1. Make a function that displays the number of times it has been called\n// Example:\n// foo() // 1\n// foo() // 2\n// foo() // 3\n\nconsole.log(\"Task 1, First  implementation option:\");\n//1 Вариант\n// Создаем функцию counter в которой будем использовать замыкание   \n\nfunction counter() {\n    let count = 0;       // Объявляем переменную Х и иницализируем её со значением 0.\n    return function() {    // Создаем самовызывающуюся функцию, которая увеличивает счетчик и выводит значение в консоль\n      count++ \n      console.log(count);\n      return count;\n    };\n  }\n  \n\n  let foo = counter()  // Присваем пременной foo ссылку на функцию\n  \nfoo() // 1\nfoo() // 2\nfoo() // 3\n\n\nconsole.log(\"Task 1, Second implementation option:\");\n// 2 Вариант\n// Более простой вариант, объявляем переменную х и инициализируем её со значением 0 в глобальной области видимости \nlet x = 0;\n\n//Создаем функцию - счетчик, которая увеличивает значение х при каждом её вызове и выводит в консоль\n\nfunction counterX (){\n    x++\n    console.log(x);\n    return x\n}\n\n\ncounterX() // 1\ncounterX() // 2\ncounterX() // 3"],"names":["console","log","count","$cf7af900fcf447c8$var$foo","$cf7af900fcf447c8$var$x","$cf7af900fcf447c8$var$counterX"],"version":3,"file":"index.4d127df2.js.map"}